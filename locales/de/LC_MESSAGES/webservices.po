# Compendium of de.
msgid ""
msgstr ""
"Project-Id-Version: Koha man18.05\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-11-12 10:42-0300\n"
"PO-Revision-Date: 2018-05-15 19:49-0300\n"
"Language-Team: Koha Translation Team \n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Pootle-Path: /de/man18.05/webservices.po\n"
"X-Pootle-Revision: 1\n"

#: ../../source/webservices.rst:4
#, fuzzy
msgid "Web Services"
msgstr "Web Services:"

#: ../../source/webservices.rst:6
msgid "Koha provides a number of APIs allowing access to it's data and functions."
msgstr ""

#: ../../source/webservices.rst:11
#, fuzzy
msgid "OAI-PMH"
msgstr "OAI-DC"

#: ../../source/webservices.rst:13
msgid "For the Open Archives Initiative-Protocol for Metadata Harvesting (OAI-PMH) there are two groups of 'participants': Data Providers and Service Providers. Data Providers (open archives, repositories) provide free access to metadata, and may, but do not necessarily, offer free access to full texts or other resources. OAI-PMH provides an easy to implement, low barrier solution for Data Providers. Service Providers use the OAI interfaces of the Data Providers to harvest and store metadata. Note that this means that there are no live search requests to the Data Providers; rather, services are based on the harvested data via OAI-PMH."
msgstr ""

#: ../../source/webservices.rst:24
msgid "Koha at present can only act as a Data Provider. It can not harvest from other repositories. The biggest stumbling block to having Koha harvest from other repositories is that MARC is the only metadata format that Koha indexes natively. Visit http://www.oaforum.org/tutorial/english/page3.htm for diagrams of how OAI-PMH works."
msgstr ""

#: ../../source/webservices.rst:31
msgid "By default Koha won't include item information in OAI-PMH result sets, but they can be added by using the include_items option in the a configuration file linked from :ref:`OAI-PMH:ConfFile`."
msgstr ""

# Web services > OAI-PMH
#: ../../source/webservices.rst:35
#, fuzzy
msgid "Learn more about OAI-PMH at: http://www.openarchives.org/pmh/"
msgstr "<a href=\"http://www.openarchives.org/pmh/\">OAI-PMH Server</a>."

#: ../../source/webservices.rst:37
msgid "To enable OAI-PMH in Koha edit the :ref:`OAI-PMH` preference. Once enabled you can visit http://YOURKOHACATALOG/cgi-bin/koha/oai.pl to see your file."
msgstr ""

#: ../../source/webservices.rst:44
msgid "Sample OAI Conf File"
msgstr ""

#: ../../source/webservices.rst:68
#, fuzzy
msgid "SRU server"
msgstr "Neuer SRU-Server"

#: ../../source/webservices.rst:70
msgid "Koha implements the Search/Retrieve via URL (SRU) protocol. More information about the protocol itself can be found at http://www.loc.gov/standards/sru/. The version implemented is version 1.1."
msgstr ""

#: ../../source/webservices.rst:78
#, fuzzy
msgid "Explain"
msgstr "Explain "

#: ../../source/webservices.rst:80
msgid "If you want to have information about the implementation of SRU on a given server, you should have access to the Explain file using a request to the server without any parameter. Like http://myserver.com:9999/biblios/. The response from the server is an XML file that should look like the following and will give you information about the default settings of the SRU server."
msgstr ""

#: ../../source/webservices.rst:149
msgid "Search"
msgstr "Suche"

#: ../../source/webservices.rst:151
msgid "This url : http://myserver.com:9999/biblios?version=1.1&operation=searchRetrieve&query=reefs is composed of the following elements:"
msgstr ""

#: ../../source/webservices.rst:155
msgid "base url of the SRU server : http://myserver.com:9999/biblios?"
msgstr ""

#: ../../source/webservices.rst:157
msgid "search part with the 3 required parameters : version, operation and query. The parameters within the search part should be of the key=value form, and can be combined with the & character."
msgstr ""

#: ../../source/webservices.rst:161
msgid "One can add optional parameters to the query, for instance maximumRecords indicating the maximum number of records to be returned by the server. So http://myserver.com:9999/biblios?version=1.1&operation=searchRetrieve&query=reefs&maximumRecords=5 will only get the first 5 results results from the server."
msgstr ""

#: ../../source/webservices.rst:167
msgid "http://www.loc.gov/standards/sru/sru1-1archive/search-retrieve-operation.html gives more details about the search operations and in particular the list of optional parameters for searching."
msgstr ""

#: ../../source/webservices.rst:171
msgid "The \"operation\" key can take two values: scan or searchRetrieve."
msgstr ""

#: ../../source/webservices.rst:173
msgid "If operation=searchRetrieve, then the search key should be query. As in : operation=searchRetrieve&query=reefs"
msgstr ""

#: ../../source/webservices.rst:176
msgid "If operation=scan, then the search key should be scanClause. As in : operation=scan&scanClause=reefs"
msgstr ""

#: ../../source/webservices.rst:179
msgid "etc/zebradb/biblios/etc/bib1.att defines Zebra/3950 indexes that exist on your system. For instance you'll see that we have indexes for Subject and for Title: att 21 Subject and att 4 Title respectively."
msgstr ""

#: ../../source/webservices.rst:183
msgid "In the pqf.properties file located under etc/zebradb/pqf.properties I see that an access point already uses my Subject index (index.dc.subject = 1=21) while another uses my Title index (index.dc.title = 1=4) I know this is my Subject index because as I've seen just before in my bib1.att file, it's called with =1=21 in Z3950: so index.dc.subject = 1=21 correctly points to my Subject index. And Title was called with 1=4 so index.dc.title = 1=4 correctly points to my Title index. I can now construct my query just like I would in a search box, just preceding it with the \"query\" key: query=Subject=reefs and Title=coral searches \"reefs\" in the subject and \"coral\" in the title. The full url would be http://myserver.com:9999/biblios?version=1.1&operation=searchRetrieve&query=Subject=reefs and Title=coral If I want to limit the result set to just 5 records, I can do http://myserver.com:9999/biblios?version=1.1&operation=searchRetrieve&query=Subject=reefs and Title=coral&maximumRecords=5"
msgstr ""

#: ../../source/webservices.rst:199
msgid "I can also play with truncate, relations, etc. Those are also defined in my pqf.properties file. I can see for instance the position properties defined as:"
msgstr ""

#: ../../source/webservices.rst:211
msgid "So as an example if I want \"coral\" to be at the beginning of the title, I can do this query : http://myserver.com:9999/biblios?version=1.1&operation=searchRetrieve&query=Title=coral first"
msgstr ""

#: ../../source/webservices.rst:219
msgid "Retrieve"
msgstr ""

#: ../../source/webservices.rst:221
msgid "My search for http://univ\\_lyon3.biblibre.com:9999/biblios?version=1.1&operation=searchRetrieve&query=coral reefs&maximumRecords=1 retrieves just on record. The response looks like this:"
msgstr ""

#: ../../source/webservices.rst:292
msgid "ILS-DI"
msgstr ""

#: ../../source/webservices.rst:294
msgid "As of writing, the self documenting ILS-DI is the most complete interface and after it has been enabled as described in the :ref:`ils-di-label`system preferences section the documentation should be available at https://YOURKOHACATALOG/cgi-bin/koha/ilsdi.pl"
msgstr ""

#: ../../source/webservices.rst:302
#, fuzzy
msgid "JSON reports services"
msgstr "Web Services"

#: ../../source/webservices.rst:304
msgid "Koha implements a JSON reports service for every report saved using the :ref:`Guided Reports Wizard <guided-report-wizard-label>` or :ref:`Report from SQL <report-from-sql-label>` features."
msgstr ""

#: ../../source/webservices.rst:308
msgid "By default reports will be non-public and only accessible by authenticated users. If a report is explicitly set to *public* it will be accessible without authentication by anyone. This feature should only be used when the data can be shared safely not containing any patron information."
msgstr ""

#: ../../source/webservices.rst:313
#, fuzzy
msgid "The reports can be accessed using the following URLs:"
msgstr "Die Indikatoren sind 체ber den 'indicator' Schl체ssel zug채nglich."

#: ../../source/webservices.rst:315
#, fuzzy
msgid "Public reports"
msgstr "OPAC-Notiz"

#: ../../source/webservices.rst:317
#, fuzzy
msgid "OpacBaseURL/cgi-bin/koha/svc/report?id=REPORTID"
msgstr "%s/cgi-bin/koha/svc/report?id=%s"

#: ../../source/webservices.rst:319
#, fuzzy
msgid "Non-public reports"
msgstr "Interne Notizen"

#: ../../source/webservices.rst:321
#, fuzzy
msgid "StaffBaseURL/cgi-bin/koha/svc/report?id=REPORTID"
msgstr "%s/cgi-bin/koha/svc/report?id=%s"

#: ../../source/webservices.rst:323
#, fuzzy
msgid "There are also some additional parameters available:"
msgstr "Zur Zeit sind keine %s verf체gbar."

#: ../../source/webservices.rst:325
msgid "Instead of accessing the report by REPORTID you can also use the report's name:"
msgstr ""

#: ../../source/webservices.rst:328
#, fuzzy
msgid ".../cgi-bin/koha/svc/report?name=REPORTNAME"
msgstr "%s/cgi-bin/koha/svc/report?id=%s"

#: ../../source/webservices.rst:330
msgid "For easier development there is also an option to generate an annotated output of the data. It will generate an array of hashes that include the field names as keys."
msgstr ""

#: ../../source/webservices.rst:334
#, fuzzy
msgid ".../cgi-bin/koha/svc/report?name=REPORTNAME&annotated=1"
msgstr "%s/cgi-bin/koha/svc/report?id=%s"

#: ../../source/webservices.rst:339
msgid "Versioned RESTful API Effort"
msgstr ""

#: ../../source/webservices.rst:341
msgid "There is an ongoing effort to converge the APIs above into a single versioned set of modern RESTful endpoints documented using the OpenAPI standard and available by default under https://YOURKOHACATALOG/api/v1/"
msgstr ""

#: ../../source/webservices.rst:348
msgid "OAuth2 client credentials grant"
msgstr ""

#: ../../source/webservices.rst:350
msgid "Koha supports the OAuth2 client credentials grant as a means to secure the API for using it from other systems to adhere to current industry standards. More information on the OAuth2 client credentials grant standard `can be found here <https://auth0.com/docs/api-auth/grant/client-credentials>`_."
msgstr ""

#: ../../source/webservices.rst:356
msgid "API key management interface for patrons"
msgstr ""

#: ../../source/webservices.rst:358
msgid "In order for API keys to be create for patrons, the system preference :ref:`RESTOAuth2ClientCredentials` **must** be enabled for the option to appear in a patron record."
msgstr ""

#: ../../source/webservices.rst:362
msgid "Navigate to a patron record and select *More > Manage API keys*"
msgstr ""

#: ../../source/webservices.rst:364
msgid "|image1336|"
msgstr "|image1336|"

#: ../../source/webservices.rst:366
msgid "If no API keys exist for a patron there will be a message prompting to generate a client id/secret pair"
msgstr ""

#: ../../source/webservices.rst:369
msgid "|image1337|"
msgstr "|image1337|"

#: ../../source/webservices.rst:371
msgid "Enter a description for the client id/secret pair and click Save"
msgstr ""

#: ../../source/webservices.rst:373
msgid "|image1338|"
msgstr "|image1338|"

#: ../../source/webservices.rst:375
msgid "Koha will generate a client id/secret pair for use to connect to Koha from other third-party systems as an authenticated client"
msgstr ""

#: ../../source/webservices.rst:378
msgid "|image1339|"
msgstr "|image1339|"

#: ../../source/webservices.rst:380
msgid "Clicking the Revoke button next to an API credential pair will render the specific credential pair inactive until reactivated"
msgstr ""

#, fuzzy
#~ msgid "REST services"
#~ msgstr "Web Services"

